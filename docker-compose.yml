version: "4.16.3"

services:
  scraper:
    build: .
    container_name: scraper

    volumes:
      - ./core:/app
    ports:
      - "8000:8000"
    environment:
      SECRET_KEY : ${SECRET_KEY}
      DEBUG : ${DEBUG}
      DB_CONTAINER_NAME : ${DB_CONTAINER_NAME}
      DB_OUTER_PORT : ${DB_OUTER_PORT}
      DB_INNER_PORT : ${DB_INNER_PORT}
      SCRAPER_DB : ${SCRAPER_DB}
      SCRAPER_USER : ${SCRAPER_USER}
      SCRAPER_USER_PASSWORD : ${SCRAPER_USER_PASSWORD}
      ADMIN_SUPER_USER: ${ADMIN_SUPER_USER}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
    networks:
      - scraper
  # database
  scraper_db:
    image: postgres:14-alpine
    container_name: ${DB_CONTAINER_NAME}
    restart: unless-stopped
    expose:
      - "${DB_INNER_PORT}"
    ports:
      - "${DB_OUTER_PORT}:${DB_INNER_PORT}"
    
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${SCRAPER_DB:-postgres}", "-U", "${SCRAPER_USER:-postgres}"]
      timeout: 10s
      interval: 10s
      retries: 10

    environment:
      POSTGRES_DB: ${SCRAPER_DB}
      POSTGRES_USER: ${SCRAPER_USER}
      POSTGRES_PASSWORD: ${SCRAPER_USER_PASSWORD}

    volumes:
      - scraper-data:/var/lib/postgresql/data # data persistence

    command: -p ${DB_INNER_PORT}

    networks:
      - scraper

networks:
  scraper:

volumes:
  scraper-data:
    driver: local